{%- macro escape_bash(caller='') %}
  {{- "'" }}{{ ((caller() if caller is callable else caller) | replace("\\", "\\\\") | replace("'", "\\'")).split('\n', maxsplit=-1) | map('trim') | select('ne', '') | join('\\n') }}{{ "'" }}
{%- endmacro %}

{%- macro systemd_shell(shell='/bin/bash', caller='') %}
  {{- shell }} -c {{ escape_bash(caller=caller) }}
{%- endmacro %}

{%- set salt_warning = salt['pillar.get']('generated-file-warning-text', "WARNING: This file is automatically generated by salt, and changes to it will be discarded.") -%}

{%- macro sha256sum(task) %}
  {{- salt['cmd.run'](["bash", "-c", 'sha256sum <<<"$sha_data" | awk "{ print \\$1 }"'], runas='nobody', env={'sha_data': task}).split(' ', maxsplit=1)[0] }}
{%- endmacro %}

{%- macro sha256sum_file(file) %}
  {{- salt['cmd.run'](["bash", "-c", 'sha256sum <"$sha_file" | awk "{ print \\$1 }"'], env={'sha_file': file}).split(' ', maxsplit=1)[0] }}
{%- endmacro %}

{%- macro yaml_escape(value, quote) %}
  {{- (value | replace("\\", "\\\\") | replace(quote, "\\" + quote) | replace("\n", "\\n")) }}
{%- endmacro %}

{%- macro yaml_string(value) %}
  {{- '"' }}{{- yaml_escape(value, quote = "\"") }}{{- '"' }}
{%- endmacro -%}

{%- macro qube_name(name) %}
  {%- set numbers = "0123456789" %}
  {%- set characters = "abcdefghijklmnopqrstuvwxyz" %}
  {%- set specials = "-_" %}
  {%- set legal = (numbers + characters + specials) | list %}
  {{- name | list | select("in", legal) | join }}
{%- endmacro %}

{%- macro unique_lines(caller='') %}
{{- (caller() if caller is callable else caller).split('\n', maxsplit=-1) | unique | join('\n') }}
{%- endmacro %}
